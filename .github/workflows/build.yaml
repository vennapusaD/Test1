name: Build

on:
  push:
    branches:
      - master


jobs:
  sonar:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - 9000:9000
    steps:
      - name: Start SonarQube
        run: |
          while ! nc -z localhost 9000; do
            echo "Waiting for SonarQube..."
            sleep 3
          done

      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install SonarQube Scanner
        run: |
          curl -sSLo sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.7.0.2747-linux.zip
          unzip sonar-scanner-cli.zip
          export PATH=$PATH:$(pwd)/sonar-scanner-4.7.0.2747-linux/bin

      - name: Run SonarQube Scanner
        run: |
          sonar-scanner \
            -Dsonar.projectKey=Test1 \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://localhost:9000 \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
  # build:
  #  name: Build and analyze
   # runs-on: ubuntu-latest
    
   # steps:
     # - uses: actions/checkout@v4
       # with:
       #   fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
     # - uses: sonarsource/sonarqube-scan-action@master
      #  env:
       #   SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        #  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
